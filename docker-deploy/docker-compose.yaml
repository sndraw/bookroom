x-shared-env: &shared-api-worker-env
  # Docker IMAGE VERSION
  DOCKER_IMAGE_VERISON: ${DOCKER_IMAGE_VERISON:-latest}
  # Environment Variables
  NODE_ENV: production

  # General Configuration
  TZ: ${TZ:-Asia/Shanghai}
  SERVER_BASE_URL: ${SERVER_BASE_URL:-/api/v1}

  # Expose Ports
  EXPOSE_SERVER_PORT: ${EXPOSE_SERVER_PORT:-5001}
  EXPOSE_PORT: ${EXPOSE_PORT:-80}
  EXPOSE_SSL_PORT: ${EXPOSE_SSL_PORT:-443}
  EXPOSE_DB_PORT: ${EXPOSE_DB_PORT:-3306}
  EXPOSE_REDIS_PORT: ${EXPOSE_REDIS_PORT:-6379}

  # DB Configuration
  DB_DIALECT: ${DB_DIALECT:-mysql}
  DB_SYNC_ALTER: ${DB_HOST:-}
  DB_SYNC_FORCE: ${DB_HOST:-}
  DB_HOST: ${DB_HOST:-bookroom_mysql}
  DB_PORT: ${DB_PORT:-3306}
  DB_USER: ${DB_USER:-root}
  DB_PASSWORD: ${DB_PASSWORD:-test}
  DB_DATABASE: ${DB_DATABASE:-bookroom_api}
  DB_TIMEZONE: ${DB_TIMEZONE:-+08:00}
  # Redis Configuration
  REDIS_HOST: ${REDIS_HOST:-bookroom_redis}
  REDIS_PORT: ${REDIS_PORT:-6379}
  REDIS_PASSWORD: ${REDIS_PASSWORD:-}
  REDIS_USE_SSL: ${REDIS_USE_SSL:-false}
  REDIS_DB: ${REDIS_DB:-0}
  # MinIO Configuration
  MINIO_ENDPOINT: ${MINIO_ENDPOINT:-127.0.0.1}
  MINIO_PORT: ${MINIO_PORT:-9000}
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-test}
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-test}
  MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-bookroom}
  MINIO_REGION: ${MINIO_REGION:-ap-southeast-1}
  MINIO_USE_SSL: ${MINIO_USE_SSL:-false}

services:
  # The mysql database.
  bookroom_mysql:
    image: mysql:8.0.40
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      # The password for the default user.
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-test}
      MYSQL_DATABASE: ${DB_DATABASE:-bookroom_api}
    command: 
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
    volumes:
      - ./init/docker-entrypoint-initdb.d/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql # 挂载初始化脚本
      - ./volumes/mysql:/var/lib/mysql
      # - ./mysql/my.cnf:/etc/my.cnf
    ports:
      - "${EXPOSE_DB_PORT:-3306}:${DB_PORT:-3306}"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - bookroom_shared_network
      - default

  # The redis cache.
  bookroom_redis:
    image: redis:6-alpine
    restart: always
    volumes:
      # Mount the redis data directory to the container.
      - ./volumes/redis/data:/data
    # Set the redis password when startup redis server.
    command: redis-server --requirepass ${REDIS_PASSWORD:-test}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    # uncomment to expose redis port to host
    ports:
      - "${EXPOSE_REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    user: root
    networks:
      - bookroom_shared_network
      - default

  # The bookroom api.
  bookroom_api:
    image: sndraw/bookroom-api:${DOCKER_IMAGE_VERISON:-latest}
    restart: always
    environment:
      <<: *shared-api-worker-env
      SERVER_TITLE: ${SERVER_TITLE:-BookRoom}
      SERVER_PORT: ${SERVER_PORT:-5001}
      SERVER_LOGS_PATH: ${SERVER_LOGS_PATH:-}
      SERVER_BASE_URL: ${SERVER_BASE_URL:-/api/v1}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:-}
      COOKIE_KEYS: ${COOKIE_KEYS:-test-key}
      COOKIE_MAXAGE: ${COOKIE_MAXAGE:-259200}
      COOKIE_NAMESPACE: ${COOKIE_NAMESPACE:-bookroom_api}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN:-}
      COOKIE_SECURE: ${COOKIE_SECURE:-true}
      COOKIE_HTTPONLY: ${COOKIE_HTTPONLY:-true}
      OAUTH2_SECRET: ${OAUTH2_SECRET:-test-secret}
      OAUTH2_BEARER: ${OAUTH2_BEARER:-Bearer}
      OAUTH2_EXPIRES_IN: ${OAUTH2_EXPIRES_IN:-86400}
      LOGIN_MAX_ERROR_COUNT: ${LOGIN_MAX_ERROR_COUNT:-3}
      LOGIN_LOCK_TIME: ${LOGIN_LOCK_TIME:-5}
      USER_TOKEN_KEY: ${USER_TOKEN_KEY:-}
      CRYPTO_SECRETKEY: ${CRYPTO_SECRETKEY:-}
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./init/bookroom-api/pm2.config.js:/app/pm2.config.js:ro
      - ./volumes/app/bookroom-api/uploads:/app/api/uploads
      - ./volumes/app/bookroom-api/logs:/app/logs
    depends_on:
      - bookroom_mysql
      - bookroom_redis
    ports:
      - "${EXPOSE_SERVER_PORT:-5001}:${SERVER_PORT:-5001}"
    user: root
    networks:
      - bookroom_shared_network
      - default

  # The bookroom web.
  bookroom_web:
    image: sndraw/bookroom-web:${DOCKER_IMAGE_VERISON:-latest}
    restart: always
    volumes:
      # - ./volumes/app/bookroom-api/uploads:/usr/share/nginx/html/uploads
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      #- ./nginx/ssl:/etc/ssl
    depends_on:
      - bookroom_api
    ports:
      - "${EXPOSE_PORT:-80}:${PORT:-80}"
      - "${EXPOSE_SSL_PORT:-443}:${SSL_PORT:-443}"
    entrypoint: [ "/bin/bash", "/entrypoint.sh" ]
    networks:
      - bookroom_shared_network
      - default

# 定义共享网络
networks:
  bookroom_shared_network:
    driver: bridge
    internal: true

